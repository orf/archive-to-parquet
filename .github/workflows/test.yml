on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:
  workflow_dispatch:

name: CI

concurrency:
  group: rust-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cross_builds:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            archive: zip
        os: [ 'ubuntu-24.04' ]
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v4

      - uses: jdx/mise-action@v2
        with:
          install: "true"
          cache: "true"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Rust Caching
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: false
          prefix-key: ${{ matrix.target }}

      - name: Cross test
        run: mise x -- cross test --target ${{ matrix.target }} --locked --workspace --all-targets --exclude=py-archive-to-parquet
        env:
          CROSS_NO_WARNINGS: "0"

      - name: Get test data
        run: mise run test-data-gping

      - name: Integration test
        run: mise x -- cross run --target ${{ matrix.target }} --locked -- test_data/output.parquet test_data/gping/*
        env:
          CROSS_NO_WARNINGS: "0"

      - name: Build release
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        run: mise x -- cross build --target ${{ matrix.target }} --release --locked

      - name: Publish artifacts and release
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: archive-to-parquet
          target: ${{ matrix.target }}

  create_release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    needs:
      - cross_builds
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Publish
        if: startsWith(github.ref, 'refs/tags/archive-to-parquet-')
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          files: |
            **/*.tar.gz
            **/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  checks:
    name: Checks
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-on-failure: false
          components: rustfmt,clippy

      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1

      - name: Run doctests
        if: success() || failure()
        run: cargo test --locked --doc --workspace --exclude=py-archive-to-parquet

      - name: Run cargo check
        if: success() || failure()
        run: cargo check

      - if: success() || failure()
        run: cargo clippy --all-targets --all-features --locked -- -D warnings

      - if: success() || failure()
        uses: pre-commit/action@v3.0.1
