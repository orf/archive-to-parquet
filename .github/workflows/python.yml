# This file is autogenerated by maturin v1.8.0
# To update, run
#
#    maturin generate-ci github --pytest
#
name: Python

on:
#  push:
#    branches:
#      - main
#      - master
#    tags:
#      - '*'
#  pull_request:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: py-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: s390x
          - runner: ubuntu-22.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-${{ matrix.platform.target }}-maturin-${{ hashFiles('**/Cargo.lock') }}

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'false'
          before-script-linux: |
            (apt-get update && apt-get install python3-pip -y) || true
            (python3 -m ensurepip || true)
          manylinux: 2_28
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.13t
          sccache: 'false'
          before-script-linux: |
            (apt-get update && apt-get install python3-pip -y) || true
            (python3 -m ensurepip || true)
          manylinux: 2_28
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist
          retention-days: 5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: pytest
        if: ${{ startsWith(matrix.platform.target, 'x86_64') }}
        shell: bash
        run: |
          set -e
          pip install -U uv
          uv sync
          uv run pytest
      - name: pytest
        if: ${{ !startsWith(matrix.platform.target, 'x86') && matrix.platform.target != 'ppc64' }}
#        uses: uraimo/run-on-arch-action@v2
        uses: orf/run-on-arch-action@support-gha-cache
        with:
          arch: ${{ matrix.platform.target }}
          distro: ubuntu22.04
          githubActionsCache: true
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
          run: |
            set -e
            pip3 install -U uv
            uv sync
            uv run pytest

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-${{ matrix.platform.target }}-maturin-${{ hashFiles('**/Cargo.lock') }}

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'false'
          manylinux: musllinux_1_2
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.13t
          sccache: 'false'
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist
          retention-days: 5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: pytest
        if: ${{ startsWith(matrix.platform.target, 'x86_64') }}
        uses: addnab/docker-run-action@v3
        with:
          image: alpine:latest
          options: -v ${{ github.workspace }}:/io -w /io
          run: |
            set -e
            apk add uv python3
            echo "Installed" && uv --version
            uv sync
            uv run pytest
      - name: pytest
        if: ${{ !startsWith(matrix.platform.target, 'x86') }}
#        uses: uraimo/run-on-arch-action@v2
        uses: orf/run-on-arch-action@support-gha-cache
        with:
          arch: ${{ matrix.platform.target }}
          distro: alpine_latest
          githubToken: ${{ github.token }}
          githubActionsCache: true
          install: |
            apk add uv python3
          run: |
            set -e
            uv sync
            uv run pytest

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-${{ matrix.platform.target }}-maturin-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'false'
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.13t
          sccache: 'false'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist
          retention-days: 5
      - name: pytest
        if: ${{ !startsWith(matrix.platform.target, 'aarch64') }}
        shell: bash
        run: |
          set -e
          pip install -U uv
          uv sync
          uv run pytest

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-${{ matrix.platform.target }}-maturin-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'false'
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.13t
          sccache: 'false'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist
          retention-days: 5
      - name: pytest
        run: |
          set -e
          pip install -U uv
          uv sync
          uv run pytest

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-${{ matrix.platform.target }}-maturin-${{ hashFiles('**/Cargo.lock') }}

      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist
          retention-days: 5

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, musllinux, windows, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'wheels-*/*'
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/py-archive-to-parquet-') }}
        uses: PyO3/maturin-action@v1
#        env:
#          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
